Tests run on Thu Feb  8 20:44:19 UTC 2024

Decompressing your archive...
tar: vsopcompiler/lexer.lex: time stamp 2024-02-08 20:45:39 is 79.736253097 s in the future
tar: vsopcompiler: time stamp 2024-02-08 20:47:05 is 165.736110253 s in the future
Entering vsopcompiler folder...
Installing build tools...
sudo apt-get install flex
Reading package lists...
Building dependency tree...
Reading state information...
flex is already the newest version (2.6.4-8).
0 upgraded, 0 newly installed, 0 to remove and 115 not upgraded.
sudo apt-get install bison	
Reading package lists...
Building dependency tree...
Reading state information...
bison is already the newest version (2:3.7.5+dfsg-1).
0 upgraded, 0 newly installed, 0 to remove and 115 not upgraded.
Building your VSOP compiler...
make: Warning: File 'lexer.lex' has modification time 78 s in the future
bison -d parser.y
flex lexer.lex
clang++ -Wall -Wextra -c lex.yy.c -o lex.yy.o
clang: warning: treating 'c' input as 'c++' when in C++ mode, this behavior is deprecated [-Wdeprecated]
clang++ -Wall -Wextra -c parser.tab.c -o parser.tab.o
clang: warning: treating 'c' input as 'c++' when in C++ mode, this behavior is deprecated [-Wdeprecated]
clang++ -Wall -Wextra lex.yy.o parser.tab.o -o vsopc
make: warning:  Clock skew detected.  Your build may be incomplete.
Your VSOP compiler seems to have been built successfully. We will now
proceed to some basic conformance tests of your lexer.

Please note that the tests are not exhaustive, and full success on the
tests does not mean your lexer is perfect. You are responsible for
testing your lexer. Write your own tests!

If a test fails, this script will output the corresponding VSOP code,
the expected output, and your compiler output. We will only report this
information for the first few failed tests, however.

Note that as the e-mail transfer is destroying many non-printable
characters, the files are printed with 'cat -v', i.e. "\r" is replaced
by "^M", "\f" by "^L", etc.

As you were free to design your own error messages, and we did not specified
what you should do after a lexical error (e.g. stop, continue just after the
faulty token, try to resynchronize on a likely token start, etc.), this script
will only check error messages up to the "<FILENAME>:<LINE>:<COL>: lexical
error", and will stop both error and output processing after the first error.

If you think the expected output is wrong, and your compiler is correct, double
check the VSOP manual and the wording. If, after that, you still think you are
correct and we are wrong, report it to the teaching assistant.

If the script crashes, report it to the teaching assistant.

01-decimal-numbers.vsop... PASS
02-whitespace.vsop... PASS
03-single-line-comments.vsop... PASS
04-multiline-comments.vsop... PASS
05-hex-numbers.vsop... PASS
06-keywords.vsop... PASS
07-type-identifiers.vsop... PASS
08-object-identifiers.vsop... PASS
09-basic-strings.vsop... PASS
10-strings-with-escapes.vsop... FAIL

Your compiler's output differs from expected output.

Here is the input file:
----------------- 8< -----------------
"String with backspace_\b"
"String with\ttab"
"String with line feed.\n"
"String with line feed\nand second line.\n"
"Overwritten\rAllows overwritting current line in well-behaved terminals.\n"
"Here is a \"nested string\".\n"
"A string escape sequence is introduced by a `\\`.\n"
"Here follows a form feed.\x0a\x0bAnd now some new page content.\n"
----------------- 8< -----------------

Here is your program's (standard) output:
----------------- 8< -----------------
1,1,string-literal,"String with backspace_\x08"
2,1,string-literal,"String with\x09tab"
3,1,string-literal,"String with line feed.\x0a"
4,1,string-literal,"String with line feed\x0aand second line.\x0a"
5,1,string-literal,"Overwritten\x0dAllows overwritting current line in well-behaved terminals.\x0a"
6,1,string-literal,"Here is a \x22nested string\x22.\x0a"
7,1,string-literal,"A string escape sequence is introduced by a `\x5c`.\x0a"
8,1,string-literal,"Here follows a form feed.
^KAnd now some new page content.\x0a"
----------------- 8< -----------------

Here is the expected standard output:
----------------- 8< -----------------
1,1,string-literal,"String with backspace_\x08"
2,1,string-literal,"String with\x09tab"
3,1,string-literal,"String with line feed.\x0a"
4,1,string-literal,"String with line feed\x0aand second line.\x0a"
5,1,string-literal,"Overwritten\x0dAllows overwritting current line in well-behaved terminals.\x0a"
6,1,string-literal,"Here is a \x22nested string\x22.\x0a"
7,1,string-literal,"A string escape sequence is introduced by a `\x5c`.\x0a"
8,1,string-literal,"Here follows a form feed.\x0a\x0bAnd now some new page content.\x0a"
----------------- 8< -----------------

11-multiline-string.vsop... PASS
12-comment-in-string.vsop... PASS
13-operators.vsop... PASS
14-eof-after-decimal-number.vsop... PASS
15-eof-after-object-identifier.vsop... PASS
16-eof-after-string.vsop... PASS
17-eof-after-keyword.vsop... PASS
18-eof-after-comment.vsop... PASS
19-MyClass-example.vsop... FAIL

Your compiler's output differs from expected output.

Here is the input file:
----------------- 8< -----------------
class MyClass {
    s : string <- "One\n\x1b[33;mTwo and \
                   three\r\n";
    i : int32 <- 0x1b;
}
----------------- 8< -----------------

Here is your program's (standard) output:
----------------- 8< -----------------
1,1,class
1,7,type-identifier,MyClass
1,15,lbrace
2,5,object-identifier,s
2,7,colon
2,9,string
2,16,assign
2,19,string-literal,"One\x0a^[[33;mTwo and three\x0d\x0a"
3,30,semicolon
4,5,object-identifier,i
4,7,colon
4,9,int32
4,15,assign
4,18,integer-literal,27
4,22,semicolon
5,1,rbrace
----------------- 8< -----------------

Here is the expected standard output:
----------------- 8< -----------------
1,1,class
1,7,type-identifier,MyClass
1,15,lbrace
2,5,object-identifier,s
2,7,colon
2,9,string
2,16,assign
2,19,string-literal,"One\x0a\x1b[33;mTwo and three\x0d\x0a"
3,30,semicolon
4,5,object-identifier,i
4,7,colon
4,9,int32
4,15,assign
4,18,integer-literal,27
4,22,semicolon
5,1,rbrace
----------------- 8< -----------------

20-factorial-example.vsop... PASS
21-list-example.vsop... PASS
22-unterminated-comment.vsop... FAIL

A lexical error was expected, but your compiler returned with 0, 
indicating success.

Here is the input file:
----------------- 8< -----------------
42
(* This comment is not terminated
blah blah blah
----------------- 8< -----------------

Here is the expected error output:
----------------- 8< -----------------
22-unterminated-comment.vsop:2:1: lexical error
----------------- 8< -----------------

23-unterminated-nested-comment.vsop... FAIL

A lexical error was expected, but your compiler returned with 0, 
indicating success.

Here is the input file:
----------------- 8< -----------------
42
(* Top-level comment
  (* Unterminated comment
  ^-- Error should point here
    (* Terminated netsted comment *)
    (* Another one (* (nested even deeper) *)
     *)
----------------- 8< -----------------

Here is the expected error output:
----------------- 8< -----------------
23-unterminated-nested-comment.vsop:3:3: lexical error
----------------- 8< -----------------

24-wrong-decimal-number.vsop... FAIL

A lexical error was expected, but your compiler returned with 0, 
indicating success.

Here is the input file:
----------------- 8< -----------------
42x // x is not a legit digit
----------------- 8< -----------------

Here is the expected error output:
----------------- 8< -----------------
24-wrong-decimal-number.vsop:1:1: lexical error
  42x is not a valid integer literal.
----------------- 8< -----------------

25-incomplete-hex-number.vsop... FAIL
26-wrong-hex-number.vsop... FAIL
27-number-followed-by-operator.vsop... PASS
28-invalid-lf-in-string.vsop... FAIL
29-unterminated-string.vsop... FAIL
30-unterminated-multiline-string.vsop... FAIL
31-unknown-escape-sequence.vsop... FAIL
32-string-ends-in-backslash.vsop... FAIL
33-string-ends-in-backslash-x.vsop... FAIL
34-string-ends-in-backslash-x-3.vsop... FAIL
35-wrong-backslash-x-escape.vsop... FAIL
36-illegal-char-dollar.vsop... FAIL
37-illegal-char-tilde.vsop... FAIL
38-illegal-char-exclamation-mark.vsop... FAIL
39-illegal-char-rbracket.vsop... FAIL

lexer-tests: passed 20 tests out of 39.
Still some work to do!
